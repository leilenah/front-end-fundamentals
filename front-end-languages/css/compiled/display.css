/**
 * CSS Display
 *
 * none:               completely remove element
 * initial:            set this property ro default value
 * inherit:            inherit from parent
 * block:              start on new line and take up whole width of parent container
 * inline: display     inline and do not take on a set width or height
 * inline-block:       display inline and you can set a width and height
 * flex:               block-level flex container
 * inline-flex:        inline-level flex container
 * grid:               block-level grid container
 * inline-grid:        inline-level grid container
 * table:              mimic behaviour of <table> element
 * table-caption:      mimic behaviour of <caption> element
 * table-column-group: mimic behaviour of <colgroup> element
 * table-header-group: mimic hehaviour of <thead> element
 * table-footer-group: mimic behaviour of <tfoot> element
 * table-row-group:    mimic behaviour of <tbody> element
 * table-cell:         mimic behaviour of <td> element
 * table-column:       mimic behaviour of <col> element
 * table-row:          mimic behaviour of <tr> element
 * inline-table:       inline-level table
 * list-item:          mimic behaviour of <li> element
 * run-in:             display as block or inline, depending on context
 * contents:           make the container disappear, making child elements children of the next ancestor
 */
.block {
  width: 150px;
  height: 150px;
  background-color: black;
}

h3 {
  text-align: center;
}

.display-block {
  display: block;
  text-align: center;
}

.inline-block {
  display: inline-block;
}

/** display flex
 *
 * display:         flex
 * justify-content: horizontal alignment
 * flex-direction:  direction of flexible items
 * align-items:     vertical alignment of items
 * flex-wrap:       specifies whether items should wrap or not
 * align-content:   aligns flex lines (opposed to flex items)
 * flex-flow:       shorthand for flex direction and flex wrap
 * order:           order of flexible item
 * align-self:      overrides align-items
 * flex:            shorthand for flex grow, flex-shrink and flex-basis
 */
.display-flex {
  display: flex;
  justify-content: space-between;
}

.display-grid {
  display: grid;
  justify-items: center;
}
.display-grid .block.one {
  grid-column: 1;
}
.display-grid .block.two {
  grid-column: 2;
}
.display-grid .block.three {
  grid-solumn: 3;
}
.display-grid .block.four {
  grid-row: 2;
  grid-column: 4;
}
